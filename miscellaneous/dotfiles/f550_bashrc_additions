#!/bin/bash

function parse_yaml {
   local prefix=$2
   local s='[[:space:]]*' w='[a-zA-Z0-9_]*' fs=$(echo @|tr @ '\034')
   sed -ne "s|^\($s\):|\1|" \
        -e "s|^\($s\)\($w\)$s:$s[\"']\(.*\)[\"']$s\$|\1$fs\2$fs\3|p" \
        -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p"  $1 |
   awk -F$fs '{
      indent = length($1)/2;
      vname[indent] = $2;
      for (i in vname) {if (i > indent) {delete vname[i]}}
      if (length($3) > 0) {
         vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
         printf("%s%s%s=\"%s\"\n", "'$prefix'",vn, $2, $3);
      }
   }'
}

default_color="\e[39m"
green_color="\e[32m"
red_color="\e[31m"
bold_font="\e[1m"
normal_font="\e[0m"


header_begin="$bold_font"
header_end="$normal_font""$default_color"

current_arena_is=` ls -l ~/ros_workspace/src/mbzirc/ros_nodes/mbzirc_main/config/arena_current.yaml  | grep -Po '(?<=->\s)\w+' `

arena_part_1_grep=`grep -A 1 "arena_part_1" ~/ros_workspace/src/mbzirc/ros_nodes/mbzirc_main/config/arena_current.yaml`
arena_part_2_grep=`grep -A 1 "arena_part_2" ~/ros_workspace/src/mbzirc/ros_nodes/mbzirc_main/config/arena_current.yaml`
arena_part_3_grep=`grep -A 1 "arena_part_3" ~/ros_workspace/src/mbzirc/ros_nodes/mbzirc_main/config/arena_current.yaml`

eval $(parse_yaml ~/ros_workspace/src/mbzirc/ros_nodes/mbzirc_main/config/arena_current.yaml "conf_")

grep_my_uav_name_part1=`echo "$conf_arena_part_1_uav_name" | grep "$UAV_NAME"`
grep_my_uav_name_part2=`echo "$conf_arena_part_2_uav_name" | grep "$UAV_NAME"`
grep_my_uav_name_part3=`echo "$conf_arena_part_3_uav_name" | grep "$UAV_NAME"`

binaries_version=`ls ~/quadrotor_control_binaries/install/v0*`

current_branch=`cd ~/ros_workspace/src/mbzirc/; git rev-parse --abbrev-ref HEAD ;cd`
ip_setting_wifi=`ifconfig wlan0 | grep "inet addr:"`
ip_setting_eth=`ifconfig eth0 | grep "inet addr:"`

echo -e "$header_begin""current_arena IS SET TO""$red_color $current_arena_is""$header_end"
echo -e "$header_begin""UAV_NAME SET TO""$red_color $UAV_NAME""$header_end"
echo -e "$header_begin""UAV_MASS SET TO""$red_color $UAV_MASS""$header_end"

echo -e "$header_begin""arena_part_1 HAS UAV NAME SET TO""$red_color $conf_arena_part_1_uav_name""$header_end"
echo -e "$header_begin""arena_part_2 HAS UAV NAME SET TO""$red_color $conf_arena_part_2_uav_name""$header_end"
echo -e "$header_begin""arena_part_3 HAS UAV NAME SET TO""$red_color $conf_arena_part_3_uav_name""$header_end"

if [ "$grep_my_uav_name_part1" == "$UAV_NAME" ]
then
      echo -e "$header_begin""THIS UAV FLY IN""$red_color arena_part_1""$header_end"
elif [ "$grep_my_uav_name_part2" == "$UAV_NAME" ]
then
       echo -e "$header_begin""THIS UAV FLY IN""$red_color arena_part_2""$header_end"
elif [ "$grep_my_uav_name_part3" == "$UAV_NAME" ]
then
       echo -e "$header_begin""THIS UAV FLY IN""$red_color arena_part_3""$header_end"
else
      echo -e "$header_begin""$red_color""!!!!! ERROR: THIS UAV NOT SET IN ANY ARENA PART !!!!!!!""$header_end"
fi

echo -e "$header_begin""binaries are ""$red_color""$binaries_version""$header_end"

echo -e "$header_begin""your current branch is ""$red_color""$current_branch""$header_end"
echo -e "$header_begin""wifi:""$red_color""$ip_setting_wifi""$header_end"
echo -e "$header_begin""eth:""$red_color""$ip_setting_eth""$header_end"
